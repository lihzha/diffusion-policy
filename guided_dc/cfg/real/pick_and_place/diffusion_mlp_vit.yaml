defaults:
  - _self_
hydra:
  run:
    dir: ${logdir}
_target_: agent.pretrain.train_diffusion_agent.TrainDiffusionAgent

job_id: 0
name: ${env}_pre_diffusion_mlp_img_ta${horizon_steps}_td${denoising_steps}_np${model.network.backbone.cfg.num_patch_embs}
# logdir: ${oc.env:GDC_LOG_DIR}/real_pick_and_place/${name}/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}
logdir: ${oc.env:GDC_LOG_DIR}/real_pick_and_place/${name}/${job_id}_${seed}
train_dataset_path: ${oc.env:GDC_DATA_DIR}/traj_data/processed_dataset.npz

seed: 42
device: cuda:0
env: pick_and_place
obs_dim: 15  # 7+7+1
action_dim: 7
denoising_steps: 100
horizon_steps: 16
cond_steps: 1
img_cond_steps: 1

wandb:
  entity: ${oc.env:GDC_WANDB_ENTITY}
  project: realworld-${env}-pretrain
  run: ${now:%H-%M-%S}_${name}

shape_meta:
  obs:
    rgb:
      shape: [3, 240, 320]  # not counting img_cond_steps
    state:
      shape: ${[obs_dim]}
  action: 
    shape: ${[action_dim]}

train:
  n_epochs: 8000
  batch_size: 256
  learning_rate: 1e-4
  weight_decay: 1e-6
  lr_scheduler:
    first_cycle_steps: 8000
    warmup_steps: 100
    min_lr: 1e-5
  epoch_start_ema: 20
  update_ema_freq: 10
  save_model_freq: 500

model:
  _target_: model.diffusion.diffusion.DiffusionModel
  predict_epsilon: True
  denoised_clip_value: 1.0
  network:
    _target_: model.diffusion.mlp_diffusion.VisionDiffusionMLP
    backbone:
      _target_: model.common.vit.VitEncoder
      obs_shape: ${shape_meta.obs.rgb.shape}
      img_h: ${shape_meta.obs.rgb.shape[1]}
      img_w: ${shape_meta.obs.rgb.shape[2]}
      num_channel: ${shape_meta.obs.rgb.shape[0]}
      cfg:
        patch_size: 16 # TODO
        depth: 1
        embed_dim: 128
        num_heads: 4
        embed_style: embed2
        embed_norm: 0
        num_patch_emb_heads: 3
        num_views: 3
    augment: False
    # num_img: 1
    spatial_emb: 128
    # visual_feature_dim: 128
    dropout: 0
    time_dim: 32
    mlp_dims: [768, 768, 768]
    residual_style: True
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
    horizon_steps: ${horizon_steps}
    action_dim: ${action_dim}
  horizon_steps: ${horizon_steps}
  obs_dim: ${obs_dim}
  action_dim: ${action_dim}
  denoising_steps: ${denoising_steps}
  device: ${device}

ema:
  decay: 0.995

train_dataset:
  _target_: agent.dataset.sequence.StitchedSequenceDataset
  use_img: True
  dataset_path: ${train_dataset_path}
  horizon_steps: ${horizon_steps}
  max_n_episodes: 100
  cond_steps: ${cond_steps}
  img_cond_steps: ${img_cond_steps}
  device: ${device}
  use_delta_actions: false